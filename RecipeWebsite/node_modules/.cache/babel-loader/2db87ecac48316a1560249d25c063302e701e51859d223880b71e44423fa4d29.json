{"ast":null,"code":"var _jsxFileName = \"/workspaces/CS-621/RecipeWebsite/src/IngredientsPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './IngredientsPopup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientsPopup = ({\n  onClose,\n  onFilter,\n  recipes\n}) => {\n  _s();\n  const ingredientsSet = new Set();\n  recipes.forEach(recipe => {\n    recipe.recipe.ingredients.forEach(ingredient => {\n      ingredientsSet.add(ingredient.food.toLowerCase());\n    });\n  });\n  const ingredientsList = Array.from(ingredientsSet);\n  const [selectedIngredients, setSelectedIngredients] = useState([]);\n  const handleIngredientClick = ingredient => {\n    setSelectedIngredients(prevSelected => prevSelected.includes(ingredient) ? prevSelected.filter(item => item !== ingredient) // This line is to remove ingredient, unselected by user.\n    : [...prevSelected, ingredient]);\n  };\n  const handleFilterSubmit = e => {\n    e.preventDefault();\n    onFilter(selectedIngredients);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What do you have? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFilterSubmit,\n        children: [ingredientsList.map(ingredient => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `ingredient-button ${selectedIngredients.includes(ingredient) ? 'selected' : ''}`,\n          onClick: () => handleIngredientClick(ingredient),\n          children: ingredient\n        }, ingredient, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Apply Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(IngredientsPopup, \"e140F9YubxibuUIhJ6e1F2c6tfc=\");\n_c = IngredientsPopup;\nexport default IngredientsPopup;\nvar _c;\n$RefreshReg$(_c, \"IngredientsPopup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","IngredientsPopup","onClose","onFilter","recipes","_s","ingredientsSet","Set","forEach","recipe","ingredients","ingredient","add","food","toLowerCase","ingredientsList","Array","from","selectedIngredients","setSelectedIngredients","handleIngredientClick","prevSelected","includes","filter","item","handleFilterSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","type","onClick","_c","$RefreshReg$"],"sources":["/workspaces/CS-621/RecipeWebsite/src/IngredientsPopup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './IngredientsPopup.css'; \r\n\r\nconst IngredientsPopup = ({ onClose, onFilter, recipes }) => {\r\n  const ingredientsSet = new Set();\r\n  recipes.forEach((recipe) => {\r\n    recipe.recipe.ingredients.forEach((ingredient) => {\r\n      ingredientsSet.add(ingredient.food.toLowerCase());\r\n    });\r\n  });\r\n  const ingredientsList = Array.from(ingredientsSet);\r\n\r\n  const [selectedIngredients, setSelectedIngredients] = useState([]);\r\n\r\n  const handleIngredientClick = (ingredient) => {\r\n    setSelectedIngredients((prevSelected) =>\r\n      prevSelected.includes(ingredient)\r\n        ? prevSelected.filter((item) => item !== ingredient) // This line is to remove ingredient, unselected by user.\r\n        : [...prevSelected, ingredient]\r\n    );\r\n  };\r\n\r\n  const handleFilterSubmit = (e) => {\r\n    e.preventDefault();\r\n    onFilter(selectedIngredients);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup-container\">\r\n      <div className=\"popup\">\r\n        <h2>What do you have? </h2>\r\n        <form onSubmit={handleFilterSubmit}>\r\n          {ingredientsList.map((ingredient) => (\r\n            <button\r\n              key={ingredient}\r\n              type=\"button\"\r\n              className={`ingredient-button ${\r\n                selectedIngredients.includes(ingredient) ? 'selected' : ''\r\n              }`}\r\n              onClick={() => handleIngredientClick(ingredient)}\r\n            >\r\n              {ingredient}\r\n            </button>\r\n          ))}\r\n          <div className=\"button-group\">\r\n            <button type=\"submit\">Apply Filter</button>\r\n            <button type=\"button\" onClick={onClose}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientsPopup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}