{"ast":null,"code":"var _jsxFileName = \"/workspaces/CS-621/RecipeWebsite/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SearchResults from './SearchResults';\nimport IngredientsPopup from './IngredientsPopup';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedIngredients, setSelectedIngredients] = useState([]);\n  const [selectedFilters, setSelectedFilters] = useState({\n    diet: '',\n    health: '',\n    cuisineType: '',\n    mealType: '',\n    dishType: ''\n  });\n  const diet = ['balanced', 'high-fiber', 'high-protein', 'low-carb', 'low-fat', 'low-sodium'];\n  const health = [\"alcohol-cocktail\", \"alcohol-free\", \"celery-free\", \"crustacean-free\", \"dairy-free\", \"DASH\", \"egg-free\", \"fish-free\", \"fodmap-free\", \"gluten-free\", \"immuno-supportive\", \"keto-friendly\", \"kidney-friendly\", \"kosher\", \"low-fat-abs\", \"low-potassium\", \"low-sugar\", \"lupine-free\", \"Mediterranean\", \"mollusk-free\", \"mustard-free\", \"no-oil-added\", \"paleo\", \"peanut-free\", \"pescatarian\", \"pork-free\", \"red-meat-free\", \"sesame-free\", \"shellfish-free\", \"soy-free\", \"sugar-conscious\", \"sulfite-free\", \"tree-nut-free\", \"vegan\", \"vegetarian\", \"wheat-free\"];\n  const cuisineType = [\"American\", \"Asian\", \"British\", \"Caribbean\", \"Central Europe\", \"Chinese\", \"Eastern Europe\", \"French\", \"Indian\", \"Italian\", \"Japanese\", \"Kosher\", \"Mediterranean\", \"Mexican\", \"Middle Eastern\", \"Nordic\", \"South American\", \"South East Asian\"];\n  const mealType = [\"Breakfast\", \"Dinner\", \"Lunch\", \"Snack\", \"Teatime\"];\n  const dishType = [\"Biscuits and cookies\", \"Bread\", \"Cereals\", \"Condiments and sauces\", \"Desserts\", \"Drinks\", \"Main course\", \"Pancake\", \"Preps\", \"Preserve\", \"Salad\", \"Sandwiches\", \"Side dish\", \"Soup\", \"Starter\", \"Sweets\"];\n\n  //useEffect(() => {\n  //  fetchResults();\n  //}, []);\n\n  const fetchResults = async () => {\n    try {\n      const url = `http://127.0.0.1:5000/?query=${search}&diet=${selectedFilters.diet}&health=${selectedFilters.health}&cuisineType=${selectedFilters.cuisineType}&mealType=${selectedFilters.mealType}&dishType=${selectedFilters.dishType}`;\n      const response = await fetch(url);\n      if (response.ok) {\n        const data = await response.json();\n        setResults(data.hits);\n        setFilteredResults(data.hits);\n      } else {\n        console.error('Error:', response.status);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchResults();\n  };\n  const handleFilter = ingredients => {\n    if (ingredients.length === 0) {\n      setFilteredResults(results);\n    } else {\n      const filtered = results.filter(recipe => {\n        const recipeIngredients = recipe.recipe.ingredients.map(ingredient => ingredient.food.toLowerCase());\n        const matchedIngredients = ingredients.filter(ingredient => recipeIngredients.includes(ingredient.toLowerCase()));\n        return matchedIngredients.length >= 3;\n      });\n      setFilteredResults(filtered);\n    }\n  };\n  const handleOpenPopup = () => {\n    setShowPopup(true);\n  };\n  const handleClosePopup = () => {\n    setShowPopup(false);\n  };\n  const handleDietFilterChange = selectedOption => {\n    setSelectedFilters(prevFilters => ({\n      ...prevFilters,\n      diet: selectedOption.value\n    }));\n  };\n  const handleHealthFilterChange = selectedOption => {\n    setSelectedFilters(prevFilters => ({\n      ...prevFilters,\n      health: selectedOption.value\n    }));\n  };\n  const handleCuisineTypeFilterChange = selectedOption => {\n    setSelectedFilters(prevFilters => ({\n      ...prevFilters,\n      cuisineType: selectedOption.value\n    }));\n  };\n  const handleMealTypeFilterChange = selectedOption => {\n    setSelectedFilters(prevFilters => ({\n      ...prevFilters,\n      mealType: selectedOption.value\n    }));\n  };\n  const handleDishTypeFilterChange = selectedOption => {\n    setSelectedFilters(prevFilters => ({\n      ...prevFilters,\n      dishType: selectedOption.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-button\",\n        type: \"button\",\n        onClick: handleOpenPopup,\n        children: \"What can I make?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-bar\",\n        type: \"text\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        placeholder: \"Search recipes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"diet\",\n            children: \"Diet:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: diet.map(d => ({\n              value: d,\n              label: d\n            })),\n            onChange: handleDietFilterChange,\n            value: selectedFilters.diet,\n            placeholder: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"health\",\n            children: \"Health:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: health.map(d => ({\n              value: d,\n              label: d\n            })),\n            onChange: handleHealthFilterChange,\n            value: selectedFilters.health,\n            placeholder: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cuisineType\",\n            children: \"Cuisine Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: cuisineType.map(d => ({\n              value: d,\n              label: d\n            })),\n            onChange: handleCuisineTypeFilterChange,\n            value: selectedFilters.cuisineType,\n            placeholder: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mealType\",\n            children: \"Meal Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: mealType.map(d => ({\n              value: d,\n              label: d\n            })),\n            onChange: handleMealTypeFilterChange,\n            value: selectedFilters.mealType,\n            placeholder: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dishType\",\n            children: \"Dish Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: dishType.map(d => ({\n              value: d,\n              label: d\n            })),\n            onChange: handleDishTypeFilterChange,\n            value: selectedFilters.dishType,\n            placeholder: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes\",\n      children: filteredResults.map(recipe => /*#__PURE__*/_jsxDEV(SearchResults, {\n        title: recipe.recipe.label,\n        calories: recipe.recipe.calories,\n        image: recipe.recipe.image,\n        ingredients: recipe.recipe.ingredientLines,\n        recipeUrl: recipe.recipe.url\n      }, recipe.recipe.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(IngredientsPopup, {\n      recipes: results,\n      selectedIngredients: selectedIngredients,\n      setSelectedIngredients: setSelectedIngredients,\n      onClose: handleClosePopup,\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"c1h0rOjZu8CAYjURobYlKNOV80M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","SearchResults","IngredientsPopup","Dropdown","jsxDEV","_jsxDEV","App","_s","search","setSearch","results","setResults","filteredResults","setFilteredResults","showPopup","setShowPopup","selectedIngredients","setSelectedIngredients","selectedFilters","setSelectedFilters","diet","health","cuisineType","mealType","dishType","fetchResults","url","response","fetch","ok","data","json","hits","console","error","status","handleSearch","e","preventDefault","handleFilter","ingredients","length","filtered","filter","recipe","recipeIngredients","map","ingredient","food","toLowerCase","matchedIngredients","includes","handleOpenPopup","handleClosePopup","handleDietFilterChange","selectedOption","prevFilters","value","handleHealthFilterChange","handleCuisineTypeFilterChange","handleMealTypeFilterChange","handleDishTypeFilterChange","className","children","onSubmit","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","placeholder","htmlFor","options","d","label","title","calories","image","ingredientLines","recipeUrl","uri","recipes","onClose","onFilter","_c","$RefreshReg$"],"sources":["/workspaces/CS-621/RecipeWebsite/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SearchResults from './SearchResults';\nimport IngredientsPopup from './IngredientsPopup';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedIngredients, setSelectedIngredients] = useState([]); \n  const [selectedFilters, setSelectedFilters] = useState({\n    diet: '',\n    health: '',\n    cuisineType: '',\n    mealType: '',\n    dishType: '',\n  });\n  const diet = ['balanced', 'high-fiber','high-protein','low-carb', 'low-fat', 'low-sodium'];\n  const health = [\"alcohol-cocktail\",\"alcohol-free\",\"celery-free\",\"crustacean-free\",\"dairy-free\",\"DASH\",\"egg-free\",\"fish-free\",\"fodmap-free\",\"gluten-free\",\"immuno-supportive\",\"keto-friendly\",\"kidney-friendly\",\"kosher\",\"low-fat-abs\",\"low-potassium\",\"low-sugar\",\"lupine-free\",\"Mediterranean\",\"mollusk-free\",\"mustard-free\",\"no-oil-added\",\"paleo\",\"peanut-free\",\"pescatarian\",\"pork-free\",\"red-meat-free\",\"sesame-free\",\"shellfish-free\",\"soy-free\",\"sugar-conscious\",\"sulfite-free\",\"tree-nut-free\",\"vegan\",\"vegetarian\",\"wheat-free\"]\n  const cuisineType = [\"American\",\"Asian\",\"British\",\"Caribbean\",\"Central Europe\",\"Chinese\",\"Eastern Europe\",\"French\",\"Indian\",\"Italian\",\"Japanese\",\"Kosher\",\"Mediterranean\",\"Mexican\",\"Middle Eastern\",\"Nordic\",\"South American\",\"South East Asian\"]\n  const mealType = [\"Breakfast\",\"Dinner\",\"Lunch\",\"Snack\",\"Teatime\"]\n  const dishType = [\"Biscuits and cookies\",\"Bread\",\"Cereals\",\"Condiments and sauces\",\"Desserts\",\"Drinks\",\"Main course\",\"Pancake\",\"Preps\",\"Preserve\",\"Salad\",\"Sandwiches\",\"Side dish\",\"Soup\",\"Starter\",\"Sweets\"]\n\n\n  //useEffect(() => {\n  //  fetchResults();\n  //}, []);\n\n  const fetchResults = async () => {\n    try {\n      const url = `http://127.0.0.1:5000/?query=${search}&diet=${selectedFilters.diet}&health=${selectedFilters.health}&cuisineType=${selectedFilters.cuisineType}&mealType=${selectedFilters.mealType}&dishType=${selectedFilters.dishType}`;\n      const response = await fetch(url);\n      if (response.ok) {\n        const data = await response.json();\n        setResults(data.hits);\n        setFilteredResults(data.hits); \n      } else {\n        console.error('Error:', response.status);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchResults();\n  };\n\n  const handleFilter = (ingredients) => {\n    if (ingredients.length === 0) {\n      setFilteredResults(results);\n    } else {\n      const filtered = results.filter((recipe) => {\n        const recipeIngredients = recipe.recipe.ingredients.map((ingredient) =>\n          ingredient.food.toLowerCase()\n        );\n        const matchedIngredients = ingredients.filter((ingredient) =>\n          recipeIngredients.includes(ingredient.toLowerCase())\n        );\n  \n        return matchedIngredients.length >= 3; \n      });\n      setFilteredResults(filtered);\n    }\n  };\n\n  const handleOpenPopup = () => {\n    setShowPopup(true);\n  };\n\n  const handleClosePopup = () => {\n    setShowPopup(false);\n  };\n\n  const handleDietFilterChange = (selectedOption) => {\n    setSelectedFilters((prevFilters) => ({\n      ...prevFilters,\n      diet: selectedOption.value,\n    }));\n  };\n  \n  const handleHealthFilterChange = (selectedOption) => {\n    setSelectedFilters((prevFilters) => ({\n      ...prevFilters,\n      health: selectedOption.value,\n    }));\n  };\n  \n  const handleCuisineTypeFilterChange = (selectedOption) => {\n    setSelectedFilters((prevFilters) => ({\n      ...prevFilters,\n      cuisineType: selectedOption.value,\n    }));\n  };\n\n  const handleMealTypeFilterChange = (selectedOption) => {\n    setSelectedFilters((prevFilters) => ({\n      ...prevFilters,\n      mealType: selectedOption.value,\n    }));\n  };\n\n  const handleDishTypeFilterChange = (selectedOption) => {\n    setSelectedFilters((prevFilters) => ({\n      ...prevFilters,\n      dishType: selectedOption.value,\n    }));\n  };\n  \n  \n\nreturn (\n  <div className=\"App\">\n    <form onSubmit={handleSearch} className=\"search-form\">\n      <button className=\"filter-button\" type=\"button\" onClick={handleOpenPopup}>\n          What can I make?\n        </button>\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          placeholder=\"Search recipes...\"\n        />\n      <button className=\"search-button\" type=\"submit\">\n        Search\n      </button>\n\n      <div className=\"filter-container\">\n        <div className=\"filter-item\">\n        <label htmlFor=\"diet\">Diet:</label>\n          <Dropdown\n            options={diet.map((d) => ({ value: d, label: d }))}\n            onChange={handleDietFilterChange}\n            value={selectedFilters.diet}\n            placeholder=\"Select an option\"\n          />\n        </div>\n\n        <div className=\"filter-item\">\n        <label htmlFor=\"health\">Health:</label>\n        <Dropdown\n          options={health.map((d) => ({ value: d, label: d }))}\n          onChange={handleHealthFilterChange}\n          value={selectedFilters.health}\n          placeholder=\"Select an option\"\n        />\n        </div>\n\n        <div className=\"filter-item\">\n        <label htmlFor=\"cuisineType\">Cuisine Type:</label>\n        <Dropdown\n          options={cuisineType.map((d) => ({ value: d, label: d }))}\n          onChange={handleCuisineTypeFilterChange}\n          value={selectedFilters.cuisineType}\n          placeholder=\"Select an option\"\n        />\n        </div>\n\n        <div className=\"filter-item\">\n        <label htmlFor=\"mealType\">Meal Type:</label>\n        <Dropdown\n          options={mealType.map((d) => ({ value: d, label: d }))}\n          onChange={handleMealTypeFilterChange}\n          value={selectedFilters.mealType}\n          placeholder=\"Select an option\"\n        />\n        </div>\n\n        <div className=\"filter-item\">\n        <label htmlFor=\"dishType\">Dish Type:</label>\n\n        <Dropdown\n          options={dishType.map((d) => ({ value: d, label: d }))}\n          onChange={handleDishTypeFilterChange}\n          value={selectedFilters.dishType}\n          placeholder=\"Select an option\"\n        />\n      </div>\n    </div>\n\n\n        \n      </form>\n      <div className=\"recipes\">\n        {filteredResults.map((recipe) => (\n          <SearchResults\n            key={recipe.recipe.uri}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredientLines}\n            recipeUrl={recipe.recipe.url}\n          />\n        ))}\n      </div>\n      {showPopup && (\n  <IngredientsPopup\n    recipes={results} \n    selectedIngredients={selectedIngredients}\n    setSelectedIngredients={setSelectedIngredients}\n    onClose={handleClosePopup}\n    onFilter={handleFilter}\n  />\n)}\n\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}